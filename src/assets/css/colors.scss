@use "sass:math";
@use "sass:color";

@function luminance($color) {
  $rgb: red($color) * 0.2126 + green($color) * 0.7152 + blue($color) * 0.0722;
  @return math.div($rgb, 255);
}

@function contrast_ratio($color1, $color2) {
  $l1: luminance($color1) + 0.05;
  $l2: luminance($color2) + 0.05;

  @return if($l1 > $l2, math.div($l1, $l2), math.div($l2, $l1));
}

@function text-color-for-background($background) {
  $black_contrast: contrast_ratio($background, rgb(2 6 23));
  $white_contrast: contrast_ratio($background, rgb(248 250 252));

  @if $black_contrast > $white_contrast {
    @return rgb(2 6 23);
  } @else {
    @return rgb(248 250 252);
  }
}


@function random_pastel() {
  $r: random(255);
  $g: random(255);
  $b: random(255);

  // mix white
  $r: math.div($r + 255, 2);
  $g: math.div($g + 255, 2);
  $b: math.div($b + 255, 2);
  @return rgb($r, $g, $b);
}

@for $i from 0 to 501 {
  $bg-color: random_pastel();
  .pastel-color-#{$i} {
    background: $bg-color;
    color: text-color-for-background($bg-color);
  }
}


// Helper function to calculate the RGB values
@function hue-to-rgb($p, $q, $t) {
  @if $t < 0 { $t: $t + 1; }
  @if $t > 1 { $t: $t - 1; }
  @if $t < 1/6 { @return $p + ($q - $p) * 6 * $t; }
  @if $t < 1/2 { @return $q; }
  @if $t < 2/3 { @return $p + ($q - $p) * (2/3 - $t) * 6; }
  @return $p;
}


@function hsl-to-rgb($hsl) {
  // Extract H, S, and L values from the input string
  $hue: nth($hsl, 1);
  $saturation: nth($hsl, 2);
  $lightness: nth($hsl, 3);

  // Convert the percentages to fractions
  $saturation: $saturation / 100;
  $lightness: $lightness / 100;

  // Calculate intermediate values
  $q: if($lightness < 0.5, $lightness * (1 + $saturation), $lightness + $saturation - $lightness * $saturation);
  $p: 2 * $lightness - $q;

  // Calculate the final RGB values
  $r: hue-to-rgb($p, $q, $hue / 360 + 1/3);
  $g: hue-to-rgb($p, $q, $hue / 360);
  $b: hue-to-rgb($p, $q, $hue / 360 - 1/3);

  // Convert the RGB values to the 0-255 range and return the RGB color string
  @return rgb(round($r * 255), round($g * 255), round($b * 255));
}
