@use "sass:math";

// Define vars we'll be using
$brand-success: #5cb85c;
$loader-size: 7em;
$check-height: math.div($loader-size, 2);
$check-width: math.div($check-height, 2);
$check-left: (math.div($loader-size, 6) + math.div($loader-size, 12));
$check-thickness: 3px;
$check-color: $brand-success;

// Reuse the existing variables
$brand-error: #d9534f; // Example color for error or cross
$cross-thickness: 0.2em;
$cross-color: $brand-error;
$cross-size: $loader-size * 0.8; // Size of the cross, adjust as necessary
$cross-line-length: math.div($cross-size, sqrt(1)); // Adjust based on the size of the cross



.circle-loader {
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-left-color: $check-color;
  animation: loader-spin 1.2s infinite linear;
  position: relative;
  display: inline-block;
  vertical-align: top;
  border-radius: 50%;
  width: $loader-size;
  height: $loader-size;
}

.load-complete {
  -webkit-animation: none;
  animation: none;
  border-color: $check-color;
  transition: border 500ms ease-out;
}


.checkmark {
  display: none;

  &.draw:after {
    animation-duration: 800ms;
    animation-timing-function: ease;
    animation-name: checkmark;
    transform: scaleX(-1) rotate(135deg);
  }

  &:after {
    opacity: 1;
    height: $check-height;
    width: $check-width;
    transform-origin: left top;
    border-right: $check-thickness solid $check-color;
    border-top: $check-thickness solid $check-color;
    content: '';
    left: $check-left;
    top: $check-height;
    position: absolute;
  }
}

@keyframes loader-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: $check-width;
    opacity: 1;
  }
  40% {
    height: $check-height;
    width: $check-width;
    opacity: 1;
  }
  100% {
    height: $check-height;
    width: $check-width;
    opacity: 1;
  }
}


// Define the cross animation
.cross {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(calc(-50%), calc(-50% - $cross-thickness / 2)) rotate(45deg);
  background-color: $cross-color;


  &.draw {
    &:before, &:after {
      content: '';
      position: absolute;
      background-color: $cross-color;
      animation: scale-up-center 300ms ease-out forwards;
    }

    &:before {
      height: $cross-thickness;
      width: $cross-line-length;
      top: 0;
      left: -1 * math.div($cross-line-length, 2) + math.div($cross-thickness, 2); // Centering the line
    }

    &:after {
      height: $cross-line-length;
      width: $cross-thickness;
      left: 0;
      top: -1 * math.div($cross-line-length, 2) + math.div($cross-thickness, 2); // Centering the line
    }
  }
}

@keyframes scale-up-center {
  0% {
    transform: scale(0.2);
  }
  100% {
    transform: scale(1);
  }
}

// Adjust the .circle-loader with error state
.circle-loader.error {
  animation: none;
  border-color: $cross-color; // Switch to error color
  transition: border 500ms ease-out;
}
